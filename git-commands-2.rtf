{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier-Bold;\f1\fnil\fcharset0 HelveticaNeue;\f2\fmodern\fcharset0 Courier;
\f3\fmodern\fcharset0 CourierNewPS-BoldMT;\f4\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0\c84706;}
\margl1440\margr1440\vieww16360\viewh7160\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs28 \cf2 \expnd0\expndtw0\kerning0
Git Commands
\f1\b0 \
\pard\pardeftab720\partightenfactor0

\f2 \cf2 \
\pard\pardeftab720\partightenfactor0

\f3\b\fs24 \cf2 git status
\f4\b0 									-> Prints the status of the Git Repository\

\f3\b git init
\f4\b0 										-> Initializes the Git Repository	\

\f3\b git config \'97global user.name \'93Let\'92s Kode It
\f4\b0 \'94			-> Specify Username Globally\

\f3\b git config \'97global user.email cryz24gman@gmail.com
\f4\b0 	-> Specify Email Globally\

\f3\b git config user.name \'93Let\'92s Kode It\'94
\f4\b0 				-> Specify Username for particular repository\

\f3\b git config user.email cryz24gman@gmail.com	
\f4\b0 		-> Specify Email for particular repository\

\f3\b git add	
\f4\b0 									-> Add file to staging environment\

\f3\b git commit -m \'93Reason why there\'92s a change\'94
\f4\b0 			-> Commit file to local Git Repository\

\f3\b git log
\f4\b0 										-> Check file log history\

\f3\b git diff <filename>
\f4\b0 								-> Check changes made to the file with existing file\

\f3\b git remote add origin <GitHub Repository URL>
\f4\b0 		-> Establish connection to the remote GitHub Repository\

\f3\b git push origin master
\f4\b0 							-> Push to master branch\

\f3\b git push origin <private_branch_name>				
\f4\b0 -> Push to a private branch\

\f3\b git checkout -b <branch_name>	
\f4\b0 					-> Command to create a new branch\

\f3\b -b
\f4\b0 											-> -b (dash b)is required when creating a private branch\
\

\f3\b \
\
Christopher Guzman
\f4\b0 \
\
\
\
\

\f3\b Scenario 1:
\f4\b0  \
First Release -> DONE\
Second Release \
	2 Features \
	2 Developers \
Third Release \
	1 Feature \
	1 Developer \
\

\f3\b Scenario 2:
\f4\b0  \
Two Developers \
	Developer 1 -> Enhance the framework \
	Developer 2 -> Automate the test cases \
\
testMethod1 -> getName() \
\
Developer 1 -> Merge code to master \
Developer 2 -> Pull from the master to the private branch, merge code to the master \
\

\f3\b Scenario 3:
\f4\b0  \
1 Developer - Two different features\
Work with different branches\
\
\
\
\
\
\
\
\
\
\

\f3\b Data Flow:
\f4\b0 \
\
\
           Private Branch 1 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
           |                            |\
           |                            |            \
           |                            |\
\'97\'97\'97\'97\'97\'97\'97\'97Master\'97\'97\'97\'97\'97\'97\'97\'97Release\'97\'97\'97\'97\'97\'97\'97\'97Master\'97\'97\'97\'97\'97\'97\'97\'97Master\'97\'97\'97\'97\'97\'97\'97\'97Release\'97\'97\'97\'97\'97\'97\'97\'97Master\'97\'97\'97\'97\'97\'97\'97\'97\
           |                                          |\
           |                                          | Pull and then merge\
           |                                          |\
           Private Branch 2 \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97}